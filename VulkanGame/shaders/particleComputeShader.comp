#version 450

struct Particle
{
	vec2 pos;
	vec2 vel;
	vec4 gradientPos;
};

// Binding 0 : Position storage buffer
layout(std140, binding = 1) buffer Pos 
{
   Particle particles[ ];
};

layout (local_size_x = 256) in;

layout (binding = 0) uniform UBO 
{
	float deltaT;
	float destX;
	float destY;
	float destZ;
	int particleCount;
} ubo;



void main() 
{
    // Current SSBO index
    uint index = gl_GlobalInvocationID.x;
	// Don't try to write beyond particle count
    if (index >= ubo.particleCount) 
		return;	

    particles[index].pos.x += ubo.deltaT*0.01f;
    particles[index].vel = vec2(1.0f);
    particles[index].gradientPos = vec4(0.0f);
   
}